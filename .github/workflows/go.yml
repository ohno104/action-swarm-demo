name: Go

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
   

jobs:

  CICD:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Print the version 
      run: echo ${{ steps.get_version.outputs.VERSION }}

    - name: Build service
      run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v ./...

    - name: Build image
      run: docker compose -f docker-compose.yml build

    - name: docker login
      run: echo "${{secrets.GHCR_PWD}}" | docker login ghcr.io -u ${{secrets.GHCR_NAME}} --password-stdin
    
    - name: Tag docker image
      run: |
        docker tag action-swarm-demo_swarm-server ghcr.io/ohno104/action-swarm-demo:latest
        docker tag action-swarm-demo_swarm-server ghcr.io/ohno104/action-swarm-demo:${{ steps.get_version.outputs.VERSION }}

    - name: Push to GHCR
      run: |
        docker push ghcr.io/ohno104/action-swarm-demo:latest
        docker push ghcr.io/ohno104/action-swarm-demo:${{ steps.get_version.outputs.VERSION }}

    - name: github script
      uses: actions/github-script@v6
      env:
        HOOK_URL: ${{ secrets.SWARM_HOOK }}
      with:
        script: |
          const { HOOK_URL } = process.env
          const result = await github.request(`${HOOK_URL}`)
          if (result.status != 200) {
            core.setFailed('FAIL!')
          } else {
            console.log('SUCCESS')
          }
